KERNEL_HDD := MoonOS.hdd

# Kernel compiler / linker flags
CFLAGS := 				 \
	-I ../libs/			 \
	-I ../kernel/		 \
	-I arch/$(ARCH)/	 \
	-I $(PLATFORM_DIR)	 \
	-std=gnu11			 \
	-O2	-pipe -g		 \
	-ffreestanding       \
	-fno-stack-protector \
	-fno-pic             \
	-mno-80387           \
	-mno-mmx             \
	-mno-3dnow           \
	-fpie				 \
	-lgcc				 \
	-mno-sse			 \
	-mno-sse2			 \
	-Wall				 \
	-fno-omit-frame-pointer \
	-mno-red-zone

ASMFLAGS := -felf64 -g -F dwarf -I arch/$(ARCH)/

LDINTERNALFLAGS :=  \
	-T $(BUILD_DIR)/link/link_$(ARCH)_$(BOARD).ld \
	-static         \
	-pie			\
	--no-dynamic-linker \
	-ztext			\
	-zmax-page-size=0x1000 \
	-nostdlib      

$(TARGET): $(OBJ)
	@printf " LD  Linking object files\n";
	@ld -r -b binary -o font.o ../font.bin
	$(LD) $(LDINTERNALFLAGS) $(OBJ) $(KLIBS) ./trace/symtable.o font.o -o $@
	python3 ../scripts/gensym.py $@
	$(LD) $(LDINTERNALFLAGS) $(OBJ) $(KLIBS) ./trace/symtable.o font.o -o $@


$(KERNEL_HDD): $(TARGET)
	@$(MAKE) --no-print-directory -C $(ECHFS_DIR)
	@$(MAKE) --no-print-directory -C $(LIMINE_DIR)
	@dd if=/dev/zero bs=1M count=0 seek=64 of=$(KERNEL_HDD) 								2> /dev/null
	@parted -s $(KERNEL_HDD) mklabel gpt 													2> /dev/null
	@parted -s $(KERNEL_HDD) mkpart primary 2048s 100% 										2> /dev/null
	@$(ECHFS_DIR)/echfs-utils -g -p0 $(KERNEL_HDD) quick-format 512 								2> /dev/null
	@$(ECHFS_DIR)/echfs-utils -g -p0 $(KERNEL_HDD) import $^ kernel.elf							2> /dev/null
	@$(ECHFS_DIR)/echfs-utils -g -p0 $(KERNEL_HDD) import boot/limine.cfg limine.cfg				2> /dev/null
	@$(LIMINE_DIR)/limine-install 	$(KERNEL_HDD)													2> /dev/null

BOOT_IMAGE: $(KERNEL_HDD)
	mkdir iso/ || echo ""
	@cp -r $(LIMINE_DIR)/BOOTIA32.EFI $(LIMINE_DIR)/BOOTX64.EFI $(LIMINE_DIR)/limine.sys $(LIMINE_DIR)/limine-cd.bin \
	$(LIMINE_DIR)/limine-eltorito-efi.bin $(LIMINE_DIR)/limine-pxe.bin boot/* $(TARGET) iso/

	xorriso -as mkisofs -b limine-cd.bin \
	-no-emul-boot -boot-load-size 4 -boot-info-table \
	--efi-boot limine-eltorito-efi.bin -efi-boot-part \
	--efi-boot-image --protective-msdos-label iso -o $(ISO_NAME)

	$(LIMINE_DIR)/limine-install $(ISO_NAME)
